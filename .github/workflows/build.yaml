name: Python Test and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - dev

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#   #     - name: Set up Python
#   #       uses: actions/setup-python@v2
#   #       with:
#   #         python-version: '3.10'

#   #     - name: Install dependencies
#   #       run: |
#   #         python -m pip install --upgrade pip
#   #         pip install -r requirements.txt

#   #     - name: Run pytest
#   #       run: pytest

#   deploy:
#     needs: build
#     runs-on: ubuntu-latest

#     steps:
#       - id: 'auth'
#         uses: 'google-github-actions/auth@v1'
#         with:
#           credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
#           project_id: '${{ secrets.GCP_PROJECT }}'
    
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Google Cloud SDK
#         uses: google-github-actions/setup-gcloud@v0.3.0

#       - name: Deploy to Google VM
#         run: |
#           echo 'this is when the deploy would happen'
#           # Replace the following commands with your deployment steps
#           # For example, you might use gcloud commands to copy files to your VM
#           gcloud compute scp --recurse ./your_app_files username@vm-instance-name:/path/to/destination




jobs:
  job_id:
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
        service_account: 'my-service-account@my-project.iam.gserviceaccount.com'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        version: '>= 363.0.0'

    - name: 'Use gcloud CLI'
      run: 'gcloud info'
